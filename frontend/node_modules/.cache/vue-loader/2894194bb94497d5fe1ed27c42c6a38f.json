{"remainingRequest":"M:\\web4\\EJB+Vue\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!M:\\web4\\EJB+Vue\\frontend\\src\\components\\mainPage\\graphSection\\canvasSection\\Canvas.vue?vue&type=style&index=0&id=3a1918db&scoped=true&lang=css&","dependencies":[{"path":"M:\\web4\\EJB+Vue\\frontend\\src\\components\\mainPage\\graphSection\\canvasSection\\Canvas.vue","mtime":1648208936207},{"path":"M:\\web4\\EJB+Vue\\frontend\\node_modules\\css-loader\\dist\\cjs.js","mtime":1647965406954},{"path":"M:\\web4\\EJB+Vue\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1647965409305},{"path":"M:\\web4\\EJB+Vue\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":1647965408112},{"path":"M:\\web4\\EJB+Vue\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647965406076},{"path":"M:\\web4\\EJB+Vue\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1647965408485}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNncmFwaCBkaXY6Zmlyc3QtY2hpbGQgewogIGJhY2tncm91bmQ6ICNhZDBhYWQ7CiAgZm9udC1zaXplOiAzMHB4OwogIGZvbnQtd2VpZ2h0OiBib2xkOwogIGJvcmRlci1yYWRpdXM6IDhweCA4cHggMCAwOwogIG1hcmdpbi1yaWdodDogMjBweDsKICBtYXJnaW4tdG9wOiAyMHB4OwogIG1hcmdpbi1sZWZ0OiAyMHB4Owp9CgojZ3JhcGggZGl2Omxhc3QtY2hpbGQgewogIGJhY2tncm91bmQ6IHdoaXRlOwogIGJvcmRlci1yYWRpdXM6IDAgMCA4cHggOHB4OwogIG1hcmdpbi1yaWdodDogMjBweDsKICBtYXJnaW4tbGVmdDogMjBweDsKfQoKI2NhbnZhcyB7CiAgd2lkdGg6IDEwMCU7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgYm9yZGVyLXJhZGl1czogMCAwIDhweCA4cHg7Cn0K"},{"version":3,"sources":["Canvas.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Canvas.vue","sourceRoot":"src/components/mainPage/graphSection/canvasSection","sourcesContent":["<template>\n  <div id=\"graph\">\n    <div>\n      Graph\n    </div>\n    <div>\n      <canvas id=\"canvas\" width=\"1000\" height=\"1000\"  v-on:click=\"sendData\" @mousemove=\"coordinates\"/>\n    </div>\n  </div>\n</template>\n\n<script>\n\n\nexport default {\n  name: \"Canvas\",\n  mounted() {\n    var c = document.getElementById(\"canvas\");\n    this.canvas = c.getContext('2d');\n\n    this.draw();\n  },\n  data() {\n    return {\n      x: '',\n      y: '',\n      r: 0,\n      canvas: null,\n      results: []\n    }\n  },\n  methods: {\n    sendData(){\n      if (this.r > 0) {\n        this.$emit('sendData', {\n          x: this.x,\n          y: this.y,\n          r: this.r\n        })\n      }\n    },\n    coordinates(e){\n      var c = document.getElementById(\"canvas\");\n\n      let clientSize = c.clientWidth;\n      let canvasSize = c.width;\n\n      let hor = e.offsetX / clientSize * canvasSize;\n      let ver = e.offsetY / clientSize * canvasSize;\n\n      this.x = Math.round((hor - 500) / 90 * 100) / 100\n      this.y = Math.round((500 - ver) / 90 * 100) / 100\n\n    },\n    dots(data) {\n      this.results = data.data\n      this.draw(this.r)\n    },\n    dot(ctx, left, top, res) {\n      if (res === 'true') ctx.fillStyle = 'green'\n      else ctx.fillStyle = 'red'\n      ctx.beginPath();\n      left = parseFloat(left.replace(\",\", \".\")) * 1000\n      top = parseFloat(top.replace(\",\", \".\")) * 1000\n      ctx.arc(left, top, 10, 0, Math.PI * 2, false);\n      ctx.fill()\n    },\n    draw_dots(){\n      this.results.forEach(el => {\n        if (el.r === this.r){\n          this.dot(this.canvas, el.left, el.top, el.res)\n        }\n      })\n    },\n    clear_dots() {\n      this.results = []\n      this.draw(this.r)\n    },\n    draw(radius) {\n\n      this.r = radius\n\n      radius = 90 * radius\n\n      let ctx = this.canvas;\n      ctx.clearRect(0, 0, 1000, 1000);\n      ctx.lineWidth = 5\n\n\n      this.canvas_rect(ctx, 500, 500, radius, radius / 2, '#35FFD7')\n      this.canvas_arc(ctx, 500, 500, radius, -Math.PI / 2, 0, '#35FFD7')\n      this.canvas_triangle(ctx, 500, 500, 500 - radius, 500, 500, 500 + radius / 2, '#35FFD7');\n\n      this.canvas_arrow(ctx, 500, 1000, 500, 0);\n      this.canvas_arrow(ctx, 0, 500, 1000, 500);\n      this.draw_points(ctx);\n\n      this.draw_dots()\n    },\n    draw_points(ctx){\n\n      ctx.fillStyle = 'black'\n\n      this.draw_point(ctx, 500, 500, '0')\n\n      this.draw_point(ctx, 500, 50, '5')\n      this.draw_point(ctx, 500, 140, '4')\n      this.draw_point(ctx, 500, 230, '3')\n      this.draw_point(ctx, 500, 320, '2')\n      this.draw_point(ctx, 500, 410, '1')\n      this.draw_point(ctx, 500, 590, '-1')\n      this.draw_point(ctx, 500, 680, '-2')\n      this.draw_point(ctx, 500, 770, '-3')\n      this.draw_point(ctx, 500, 860, '-4')\n      this.draw_point(ctx, 500, 950, '-5')\n\n\n      this.draw_point(ctx, 50, 500, '-5')\n      this.draw_point(ctx, 140, 500, '-4')\n      this.draw_point(ctx, 230, 500, '-3')\n      this.draw_point(ctx, 320, 500, '-2')\n      this.draw_point(ctx, 410, 500, '-1')\n      this.draw_point(ctx, 590, 500, '1')\n      this.draw_point(ctx, 680, 500, '2')\n      this.draw_point(ctx, 770, 500, '3')\n      this.draw_point(ctx, 860, 500, '4')\n      this.draw_point(ctx, 950, 500, '5')\n    },\n    draw_point(ctx, fromx, fromy, text) {\n      ctx.beginPath();\n      ctx.arc(fromx, fromy, 10, 0, Math.PI * 2, false);\n      ctx.fill()\n      ctx.stroke();\n      ctx.font = \"48px als schlange sans\";\n      ctx.fillText(text, fromx + 10, fromy + 50)\n    },\n    canvas_arrow(context, fromx, fromy, tox, toy) {\n      context.beginPath();\n      var headlen = 30; // length of head in pixels\n      var dx = tox - fromx;\n      var dy = toy - fromy;\n      var angle = Math.atan2(dy, dx);\n      context.moveTo(fromx, fromy);\n      context.lineTo(tox, toy);\n      context.lineTo(tox - headlen * Math.cos(angle - Math.PI / 6), toy - headlen * Math.sin(angle - Math.PI / 6));\n      context.moveTo(tox, toy);\n      context.lineTo(tox - headlen * Math.cos(angle + Math.PI / 6), toy - headlen * Math.sin(angle + Math.PI / 6));\n      context.stroke();\n    },\n    canvas_rect(ctx, fromx, fromy, width, height, color) {\n      ctx.beginPath();\n      ctx.fillStyle = color\n      ctx.rect(fromx, fromy, width, height);\n      ctx.fill();\n      ctx.stroke();\n    },\n    canvas_arc(ctx, fromx, fromy, rad, ang_start, ang_end, color){\n      ctx.fillStyle = color\n      ctx.beginPath();\n      ctx.arc(fromx, fromy, rad, ang_start, ang_end, false);\n      ctx.moveTo(500 + rad, 500);\n      ctx.lineTo(fromx, fromy);\n      ctx.lineTo(fromx, 500 - rad);\n      ctx.fill()\n      ctx.stroke();\n    },\n    canvas_triangle(ctx, x1, y1, x2, y2, x3, y3, color){\n      ctx.fillStyle = color\n      ctx.beginPath();\n      ctx.moveTo(x1,y1);\n      ctx.lineTo(x2,y2);\n      ctx.lineTo(x3,y3);\n      ctx.lineTo(x1,y1);\n      ctx.fill();\n      ctx.stroke();\n    },\n  },\n}\n</script>\n\n<style scoped>\n#graph div:first-child {\n  background: #ad0aad;\n  font-size: 30px;\n  font-weight: bold;\n  border-radius: 8px 8px 0 0;\n  margin-right: 20px;\n  margin-top: 20px;\n  margin-left: 20px;\n}\n\n#graph div:last-child {\n  background: white;\n  border-radius: 0 0 8px 8px;\n  margin-right: 20px;\n  margin-left: 20px;\n}\n\n#canvas {\n  width: 100%;\n  background-color: white;\n  border-radius: 0 0 8px 8px;\n}\n</style>"]}]}